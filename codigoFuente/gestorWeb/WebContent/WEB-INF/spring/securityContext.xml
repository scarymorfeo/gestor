<?xml version="1.0" encoding="UTF-8" ?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">
	
	<http pattern="/resources/**" security="none" />
	<http pattern="/javax.faces.resource/**" security="none" />
    
	<authentication-manager erase-credentials="true" alias="customAuthenticationProvider">
		<authentication-provider user-service-ref="customUserDetailsService">
			<password-encoder hash="bcrypt" /> 
		</authentication-provider>
	</authentication-manager>

	<http auto-config="true" use-expressions="true" >
		<expression-handler ref="webExpressionHandler"/>
		<custom-filter ref="authenticationTokenProcessingFilter" position="PRE_AUTH_FILTER"  />
		<csrf disabled="true" />
		<intercept-url pattern="/views/public/**" access="permitAll"  />
		<intercept-url pattern="/views/private/**" access="hasAnyRole('ROLE_ADMIN','ROLE_USUARIO','ROLE_ALUMNO','ROLE_DOCENTE')" />

		<form-login login-page="/login"
			default-target-url="/tablero" login-processing-url="/j_spring_security_check"
			username-parameter="j_username" password-parameter="j_password"
			authentication-success-handler-ref="authenticationHandler"
			authentication-failure-handler-ref="authFailureHandler" />

		<logout logout-url="/j_spring_security_logout"
			success-handler-ref="logOutSuccesHandler" />

		<session-management
			invalid-session-url="/">
			<concurrency-control expired-url="/pages/public/viewExpired.jsf" />
		</session-management>
		
		
		<port-mappings>
			<port-mapping http="80" https="443"/>
			<port-mapping http="8080" https="8443"/>
		</port-mappings>
		
	</http>
	
	<beans:bean id="customAuthenticationProvider" class="mx.gob.sedesol.gestorweb.config.security.CustomAuthenticationProvider" >
		<beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<beans:bean id="customUserDetailsService" class="mx.gob.sedesol.gestorweb.config.security.CustomUserDetailsService" />

	<beans:bean id="authFailureHandler"
		class="mx.gob.sedesol.gestorweb.config.security.AuthFailureHandler" />

	<beans:bean id="authenticationHandler"
		class="mx.gob.sedesol.gestorweb.config.security.AuthSuccessHandler" />

	<beans:bean id="logOutSuccesHandler"
		class="mx.gob.sedesol.gestorweb.config.security.HttpLogoutSuccessHandler" />
		
	<beans:bean id="CustomAuthenticationEntryPoint"
              class="mx.gob.sedesol.gestorweb.ws.secure.CustomAuthenticationEntryPoint" />

    <beans:bean class="mx.gob.sedesol.gestorweb.ws.secure.AuthenticationTokenProcessingFilter"
              id="authenticationTokenProcessingFilter"/>

	<beans:bean id="requestContextFilter"
		class="org.springframework.web.filter.RequestContextFilter" />

	<!-- Habilita anotaciones -->
	<global-method-security pre-post-annotations="enabled">
		<expression-handler ref="expressionHandler" />
		<!-- expression-handler ref="webExpressionHandler" /> -->
	</global-method-security>

	<beans:bean id="webExpressionHandler"
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="customPermissionEvaluator" />
	</beans:bean>
	
	<!-- Anotaciones a nivel de servicios -->
	<beans:bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="permissionEvaluator" ref="customPermissionEvaluator" />
	</beans:bean>

	<beans:bean id="customPermissionEvaluator"
		class="mx.gob.sedesol.gestorweb.config.security.CustomPermissionEvaluator" />
		
	<!-- <aop:config proxy-target-class="true" /> -->
	
</beans:beans>
